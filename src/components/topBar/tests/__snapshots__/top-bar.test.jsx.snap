// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders TopBar with scroll active correctly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: fixed;
  z-index: 99999;
  top: 0;
  margin-top: 0;
  width: 90%;
  height: 80px;
  background-color: white;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-left: auto;
}

.c2 button {
  padding: 0 15px;
}

.c2 button:first-of-type {
  margin-right: 10px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 100px;
}

.c1::before {
  content: 'by';
  display: block;
  position: absolute;
  top: 30px;
  left: 74px;
  opacity: 1;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 14px;
  color: #777777;
  font-weight: 300;
}

.c1::after {
  content: 'Adele';
  display: block;
  position: absolute;
  top: 25px;
  left: 10px;
  opacity: 1;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 21px;
  color: #222222;
  font-weight: bold;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c1 figcaption {
  opacity: 0;
  margin-left: 10px;
  margin-top: -3px;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 14px;
  color: #777777;
  font-weight: 300;
}

.c1 figcaption a {
  -webkit-text-decoration: none;
  text-decoration: none;
  border-bottom: 1px solid transparent;
  -webkit-transition: all 0.5s ease-in;
  transition: all 0.5s ease-in;
}

.c1 figcaption a:active,
.c1 figcaption a:visited,
.c1 figcaption a:link,
.c1 figcaption a:focus {
  color: #777777;
}

.c1 figcaption a:hover {
  border-bottom: 1px solid #777777;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  height: 40px;
  min-height: 40px;
  width: 100%;
  max-width: 200px;
  background-color: #006cff;
  border-radius: 25px;
  border: 1px solid #006cff;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 16px;
  font-weight: 300;
  color: white;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  -webkit-transition: all ease-in 0.1s;
  transition: all ease-in 0.1s;
}

.c3:hover {
  background-color: #3389ff;
  border-color: #3389ff;
  box-shadow: 4px 4px 20px rgba(179,211,255,0.6);
}

.c3:active {
  background-color: #0061e6;
  box-shadow: 'none';
}

.c3:focus {
  outline: none;
  background-color: #3389ff;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-right: 6px;
}

.c4 [title~='facebook'] span {
  padding: 0 0 1px 2px;
}

.c4 [title~='twitter'] span {
  padding: 0 0 0 2px;
}

.c4 [title~='linkedin'] span {
  padding: 0 0 0 2px;
}

.c4 [title~='github'] span {
  padding: 0 0 1px 2px;
}

.c4 [title~='github'] span svg {
  width: 20px;
  margin-left: -7px;
}

.c5 {
  display: inline-block;
  margin-left: 6px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 30px;
  height: 30px;
  background: none;
  border: 1px solid #006cff;
  border-radius: 100%;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
  cursor: pointer;
  outline: none;
}

.c6 span {
  position: relative;
  display: block;
  width: 14px;
  height: 14px;
}

.c6 svg {
  display: block;
  -webkit-transition: fill 0.3s ease-in;
  transition: fill 0.3s ease-in;
  width: 10px;
  height: 14px;
}

.c6:hover,
.c6:focus {
  background-color: #006cff;
}

.c6:hover svg,
.c6:focus svg {
  fill: white;
}

.c7:focus {
  outline: 0;
}

.c7 > svg {
  width: 14px;
  height: 100%;
  fill: #006cff;
  cursor: pointer;
}

.c7 > svg:hover {
  fill: #006cff;
}

.c8:focus {
  outline: 0;
}

.c8 > svg {
  width: 13px;
  height: 100%;
  fill: #006cff;
  cursor: pointer;
}

.c8 > svg:hover {
  fill: #006cff;
}

<TopBar
  scroll={true}
>
  <styled.div
    id="top-bar"
    scroll={true}
  >
    <div
      className="c0"
      id="top-bar"
    >
      <styled.figure
        scroll={true}
      >
        <figure
          className="c1"
        >
          <Logo
            tab={1}
          >
            <a
              href="https://www.uxpin.com?utm_source=adele.uxpin.com&utm_medium=upartner&utm_campaign=Adele"
              rel="noopener noreferrer"
              tabIndex={1}
              target="_blank"
              title="UXPin logo"
            >
              <SVGInline
                classSuffix="-svg"
                cleanup={Array []}
                cleanupExceptions={Array []}
                component="span"
                svg="test-file-stub"
              >
                <span
                  className="SVGInline"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "test-file-stub",
                    }
                  }
                />
              </SVGInline>
            </a>
          </Logo>
          <figcaption>
            <a
              href="http://uxpin.com"
              rel="noopener noreferrer"
              tabIndex={1}
              target="_blank"
              title="UXPin - The Design Systems Platform"
            >
              The Design Systems Platform
            </a>
          </figcaption>
        </figure>
      </styled.figure>
      <styled.nav>
        <nav
          className="c2"
        >
          <Button
            accent={false}
            action={[Function]}
            label="Home"
            tab={1}
            targetBlank={false}
            type="button"
          >
            <styled.button
              accent={false}
              onClick={[Function]}
              tabIndex={1}
            >
              <button
                className="c3"
                onClick={[Function]}
                tabIndex={1}
              >
                Home
              </button>
            </styled.button>
          </Button>
          <Button
            accent={false}
            action={[Function]}
            label="Stats"
            tab={1}
            targetBlank={false}
            type="button"
          >
            <styled.button
              accent={false}
              onClick={[Function]}
              tabIndex={1}
            >
              <button
                className="c3"
                onClick={[Function]}
                tabIndex={1}
              >
                Stats
              </button>
            </styled.button>
          </Button>
        </nav>
      </styled.nav>
      <Social
        networks={
          Array [
            "twitter",
            "facebook",
            "linkedin",
          ]
        }
        tab={1}
        url="https://www.uxpin.com/adele"
      >
        <styled.ul>
          <ul
            className="c4"
          >
            <styled.li
              title="github"
            >
              <li
                className="c5"
                title="github"
              >
                <styled.span
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    tabIndex={1}
                  >
                    <a
                      href="https://github.com/marcintreder/adele"
                      target="_blank"
                    >
                      <Icon
                        active={true}
                        color="#006cff"
                        i="test-file-stub"
                        in="blue"
                        rotate={0}
                        size="m"
                      >
                        <Styled(SVGInline)
                          color="#006cff"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="m"
                          svg="test-file-stub"
                        >
                          <SVGInline
                            className="c7"
                            classSuffix="-svg"
                            cleanup={Array []}
                            cleanupExceptions={Array []}
                            color="#006cff"
                            component="span"
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="m"
                            svg="test-file-stub"
                          >
                            <span
                              className="SVGInline c7"
                              color="#006cff"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                              data-active={true}
                              in="blue"
                              rotate={0}
                              size="m"
                            />
                          </SVGInline>
                        </Styled(SVGInline)>
                      </Icon>
                    </a>
                  </span>
                </styled.span>
              </li>
            </styled.li>
            <styled.li
              key="twitter"
              title="twitter social share"
            >
              <li
                className="c5"
                title="twitter social share"
              >
                <styled.span
                  onClick={[Function]}
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    onClick={[Function]}
                    tabIndex={1}
                  >
                    <Icon
                      active={true}
                      color="#006cff"
                      i="test-file-stub"
                      in="blue"
                      rotate={0}
                      size="s"
                    >
                      <Styled(SVGInline)
                        color="#006cff"
                        data-active={true}
                        in="blue"
                        rotate={0}
                        size="s"
                        svg="test-file-stub"
                      >
                        <SVGInline
                          className="c8"
                          classSuffix="-svg"
                          cleanup={Array []}
                          cleanupExceptions={Array []}
                          color="#006cff"
                          component="span"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="s"
                          svg="test-file-stub"
                        >
                          <span
                            className="SVGInline c8"
                            color="#006cff"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "test-file-stub",
                              }
                            }
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="s"
                          />
                        </SVGInline>
                      </Styled(SVGInline)>
                    </Icon>
                  </span>
                </styled.span>
              </li>
            </styled.li>
            <styled.li
              key="facebook"
              title="facebook social share"
            >
              <li
                className="c5"
                title="facebook social share"
              >
                <styled.span
                  onClick={[Function]}
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    onClick={[Function]}
                    tabIndex={1}
                  >
                    <Icon
                      active={true}
                      color="#006cff"
                      i="test-file-stub"
                      in="blue"
                      rotate={0}
                      size="s"
                    >
                      <Styled(SVGInline)
                        color="#006cff"
                        data-active={true}
                        in="blue"
                        rotate={0}
                        size="s"
                        svg="test-file-stub"
                      >
                        <SVGInline
                          className="c8"
                          classSuffix="-svg"
                          cleanup={Array []}
                          cleanupExceptions={Array []}
                          color="#006cff"
                          component="span"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="s"
                          svg="test-file-stub"
                        >
                          <span
                            className="SVGInline c8"
                            color="#006cff"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "test-file-stub",
                              }
                            }
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="s"
                          />
                        </SVGInline>
                      </Styled(SVGInline)>
                    </Icon>
                  </span>
                </styled.span>
              </li>
            </styled.li>
            <styled.li
              key="linkedin"
              title="linkedin social share"
            >
              <li
                className="c5"
                title="linkedin social share"
              >
                <styled.span
                  onClick={[Function]}
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    onClick={[Function]}
                    tabIndex={1}
                  >
                    <Icon
                      active={true}
                      color="#006cff"
                      i="test-file-stub"
                      in="blue"
                      rotate={0}
                      size="s"
                    >
                      <Styled(SVGInline)
                        color="#006cff"
                        data-active={true}
                        in="blue"
                        rotate={0}
                        size="s"
                        svg="test-file-stub"
                      >
                        <SVGInline
                          className="c8"
                          classSuffix="-svg"
                          cleanup={Array []}
                          cleanupExceptions={Array []}
                          color="#006cff"
                          component="span"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="s"
                          svg="test-file-stub"
                        >
                          <span
                            className="SVGInline c8"
                            color="#006cff"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "test-file-stub",
                              }
                            }
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="s"
                          />
                        </SVGInline>
                      </Styled(SVGInline)>
                    </Icon>
                  </span>
                </styled.span>
              </li>
            </styled.li>
          </ul>
        </styled.ul>
      </Social>
    </div>
  </styled.div>
</TopBar>
`;

exports[`renders TopBar with scroll inactive correctly 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: fixed;
  z-index: 99999;
  top: 0;
  margin-top: 0;
  width: 90%;
  height: 80px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-left: auto;
}

.c2 button {
  padding: 0 15px;
}

.c2 button:first-of-type {
  margin-right: 10px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-left: 4px;
}

.c1::before {
  content: 'by';
  display: none;
  position: absolute;
  top: 30px;
  left: 74px;
  opacity: 0;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 14px;
  color: #777777;
  font-weight: 300;
}

.c1::after {
  content: 'Adele';
  display: none;
  position: absolute;
  top: 25px;
  left: 10px;
  opacity: 0;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 21px;
  color: #222222;
  font-weight: bold;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c1 figcaption {
  opacity: 1;
  margin-left: 10px;
  margin-top: -3px;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 14px;
  color: #777777;
  font-weight: 300;
}

.c1 figcaption a {
  -webkit-text-decoration: none;
  text-decoration: none;
  border-bottom: 1px solid transparent;
  -webkit-transition: all 0.5s ease-in;
  transition: all 0.5s ease-in;
}

.c1 figcaption a:active,
.c1 figcaption a:visited,
.c1 figcaption a:link,
.c1 figcaption a:focus {
  color: #777777;
}

.c1 figcaption a:hover {
  border-bottom: 1px solid #777777;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
  height: 40px;
  min-height: 40px;
  width: 100%;
  max-width: 200px;
  background-color: #006cff;
  border-radius: 25px;
  border: 1px solid #006cff;
  font-family: proxima-nova,Proxima Nova,Helvetica Neue,Helvetica,Arial,sans-serif;
  font-size: 16px;
  font-weight: 300;
  color: white;
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
  -webkit-transition: all ease-in 0.1s;
  transition: all ease-in 0.1s;
}

.c3:hover {
  background-color: #3389ff;
  border-color: #3389ff;
  box-shadow: 4px 4px 20px rgba(179,211,255,0.6);
}

.c3:active {
  background-color: #0061e6;
  box-shadow: 'none';
}

.c3:focus {
  outline: none;
  background-color: #3389ff;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-right: 6px;
}

.c4 [title~='facebook'] span {
  padding: 0 0 1px 2px;
}

.c4 [title~='twitter'] span {
  padding: 0 0 0 2px;
}

.c4 [title~='linkedin'] span {
  padding: 0 0 0 2px;
}

.c4 [title~='github'] span {
  padding: 0 0 1px 2px;
}

.c4 [title~='github'] span svg {
  width: 20px;
  margin-left: -7px;
}

.c5 {
  display: inline-block;
  margin-left: 6px;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 30px;
  height: 30px;
  background: none;
  border: 1px solid #006cff;
  border-radius: 100%;
  -webkit-transition: background-color 0.3s ease-in;
  transition: background-color 0.3s ease-in;
  cursor: pointer;
  outline: none;
}

.c6 span {
  position: relative;
  display: block;
  width: 14px;
  height: 14px;
}

.c6 svg {
  display: block;
  -webkit-transition: fill 0.3s ease-in;
  transition: fill 0.3s ease-in;
  width: 10px;
  height: 14px;
}

.c6:hover,
.c6:focus {
  background-color: #006cff;
}

.c6:hover svg,
.c6:focus svg {
  fill: white;
}

.c7:focus {
  outline: 0;
}

.c7 > svg {
  width: 14px;
  height: 100%;
  fill: #006cff;
  cursor: pointer;
}

.c7 > svg:hover {
  fill: #006cff;
}

.c8:focus {
  outline: 0;
}

.c8 > svg {
  width: 13px;
  height: 100%;
  fill: #006cff;
  cursor: pointer;
}

.c8 > svg:hover {
  fill: #006cff;
}

<TopBar
  scroll={false}
>
  <styled.div
    id="top-bar"
    scroll={false}
  >
    <div
      className="c0"
      id="top-bar"
    >
      <styled.figure
        scroll={false}
      >
        <figure
          className="c1"
        >
          <Logo
            tab={1}
          >
            <a
              href="https://www.uxpin.com?utm_source=adele.uxpin.com&utm_medium=upartner&utm_campaign=Adele"
              rel="noopener noreferrer"
              tabIndex={1}
              target="_blank"
              title="UXPin logo"
            >
              <SVGInline
                classSuffix="-svg"
                cleanup={Array []}
                cleanupExceptions={Array []}
                component="span"
                svg="test-file-stub"
              >
                <span
                  className="SVGInline"
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "test-file-stub",
                    }
                  }
                />
              </SVGInline>
            </a>
          </Logo>
          <figcaption>
            <a
              href="http://uxpin.com"
              rel="noopener noreferrer"
              tabIndex={1}
              target="_blank"
              title="UXPin - The Design Systems Platform"
            >
              The Design Systems Platform
            </a>
          </figcaption>
        </figure>
      </styled.figure>
      <styled.nav>
        <nav
          className="c2"
        >
          <Button
            accent={false}
            action={[Function]}
            label="Home"
            tab={1}
            targetBlank={false}
            type="button"
          >
            <styled.button
              accent={false}
              onClick={[Function]}
              tabIndex={1}
            >
              <button
                className="c3"
                onClick={[Function]}
                tabIndex={1}
              >
                Home
              </button>
            </styled.button>
          </Button>
          <Button
            accent={false}
            action={[Function]}
            label="Stats"
            tab={1}
            targetBlank={false}
            type="button"
          >
            <styled.button
              accent={false}
              onClick={[Function]}
              tabIndex={1}
            >
              <button
                className="c3"
                onClick={[Function]}
                tabIndex={1}
              >
                Stats
              </button>
            </styled.button>
          </Button>
        </nav>
      </styled.nav>
      <Social
        networks={
          Array [
            "twitter",
            "facebook",
            "linkedin",
          ]
        }
        tab={1}
        url="https://www.uxpin.com/adele"
      >
        <styled.ul>
          <ul
            className="c4"
          >
            <styled.li
              title="github"
            >
              <li
                className="c5"
                title="github"
              >
                <styled.span
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    tabIndex={1}
                  >
                    <a
                      href="https://github.com/marcintreder/adele"
                      target="_blank"
                    >
                      <Icon
                        active={true}
                        color="#006cff"
                        i="test-file-stub"
                        in="blue"
                        rotate={0}
                        size="m"
                      >
                        <Styled(SVGInline)
                          color="#006cff"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="m"
                          svg="test-file-stub"
                        >
                          <SVGInline
                            className="c7"
                            classSuffix="-svg"
                            cleanup={Array []}
                            cleanupExceptions={Array []}
                            color="#006cff"
                            component="span"
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="m"
                            svg="test-file-stub"
                          >
                            <span
                              className="SVGInline c7"
                              color="#006cff"
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "test-file-stub",
                                }
                              }
                              data-active={true}
                              in="blue"
                              rotate={0}
                              size="m"
                            />
                          </SVGInline>
                        </Styled(SVGInline)>
                      </Icon>
                    </a>
                  </span>
                </styled.span>
              </li>
            </styled.li>
            <styled.li
              key="twitter"
              title="twitter social share"
            >
              <li
                className="c5"
                title="twitter social share"
              >
                <styled.span
                  onClick={[Function]}
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    onClick={[Function]}
                    tabIndex={1}
                  >
                    <Icon
                      active={true}
                      color="#006cff"
                      i="test-file-stub"
                      in="blue"
                      rotate={0}
                      size="s"
                    >
                      <Styled(SVGInline)
                        color="#006cff"
                        data-active={true}
                        in="blue"
                        rotate={0}
                        size="s"
                        svg="test-file-stub"
                      >
                        <SVGInline
                          className="c8"
                          classSuffix="-svg"
                          cleanup={Array []}
                          cleanupExceptions={Array []}
                          color="#006cff"
                          component="span"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="s"
                          svg="test-file-stub"
                        >
                          <span
                            className="SVGInline c8"
                            color="#006cff"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "test-file-stub",
                              }
                            }
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="s"
                          />
                        </SVGInline>
                      </Styled(SVGInline)>
                    </Icon>
                  </span>
                </styled.span>
              </li>
            </styled.li>
            <styled.li
              key="facebook"
              title="facebook social share"
            >
              <li
                className="c5"
                title="facebook social share"
              >
                <styled.span
                  onClick={[Function]}
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    onClick={[Function]}
                    tabIndex={1}
                  >
                    <Icon
                      active={true}
                      color="#006cff"
                      i="test-file-stub"
                      in="blue"
                      rotate={0}
                      size="s"
                    >
                      <Styled(SVGInline)
                        color="#006cff"
                        data-active={true}
                        in="blue"
                        rotate={0}
                        size="s"
                        svg="test-file-stub"
                      >
                        <SVGInline
                          className="c8"
                          classSuffix="-svg"
                          cleanup={Array []}
                          cleanupExceptions={Array []}
                          color="#006cff"
                          component="span"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="s"
                          svg="test-file-stub"
                        >
                          <span
                            className="SVGInline c8"
                            color="#006cff"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "test-file-stub",
                              }
                            }
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="s"
                          />
                        </SVGInline>
                      </Styled(SVGInline)>
                    </Icon>
                  </span>
                </styled.span>
              </li>
            </styled.li>
            <styled.li
              key="linkedin"
              title="linkedin social share"
            >
              <li
                className="c5"
                title="linkedin social share"
              >
                <styled.span
                  onClick={[Function]}
                  tabIndex={1}
                >
                  <span
                    className="c6"
                    onClick={[Function]}
                    tabIndex={1}
                  >
                    <Icon
                      active={true}
                      color="#006cff"
                      i="test-file-stub"
                      in="blue"
                      rotate={0}
                      size="s"
                    >
                      <Styled(SVGInline)
                        color="#006cff"
                        data-active={true}
                        in="blue"
                        rotate={0}
                        size="s"
                        svg="test-file-stub"
                      >
                        <SVGInline
                          className="c8"
                          classSuffix="-svg"
                          cleanup={Array []}
                          cleanupExceptions={Array []}
                          color="#006cff"
                          component="span"
                          data-active={true}
                          in="blue"
                          rotate={0}
                          size="s"
                          svg="test-file-stub"
                        >
                          <span
                            className="SVGInline c8"
                            color="#006cff"
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "test-file-stub",
                              }
                            }
                            data-active={true}
                            in="blue"
                            rotate={0}
                            size="s"
                          />
                        </SVGInline>
                      </Styled(SVGInline)>
                    </Icon>
                  </span>
                </styled.span>
              </li>
            </styled.li>
          </ul>
        </styled.ul>
      </Social>
    </div>
  </styled.div>
</TopBar>
`;
